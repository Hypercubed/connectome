function ngGridFlexibleHeightPlugin(a){var b=this;b.grid=null,b.scope=null,b.init=function(c,d,e){b.domUtilityService=e.DomUtilityService,b.grid=d,b.scope=c;var f=function(){setTimeout(g,1)},g=function(){var c=b.grid.gridId,d="."+c+" .ngFooterPanel",e=b.grid.$topPanel.height()+$(d).height(),f=b.grid.$canvas.height()+1;null!=a&&(null!=a.minHeight&&f+e<a.minHeight&&(f=a.minHeight-e-2),null!=a.maxHeight&&f+e>a.maxHeight&&(f=a.maxHeight));var g=f+3;b.scope.baseViewportHeight&&b.scope.baseViewportHeight===g||(b.grid.$viewport.css("height",g+"px"),b.grid.$root.css("height",g+e+"px"),b.scope.baseViewportHeight=g,b.domUtilityService.RebuildGrid(b.scope,b.grid))};b.scope.catHashKeys=function(){var a,c="";for(a in b.scope.renderedRows)c+=b.scope.renderedRows[a].$$hashKey;return c},b.scope.$watch("catHashKeys()",g),b.scope.$watch(b.grid.config.data,f)}}!function(){"use strict";angular.module("lrSpaApp",["ngSanitize","hc.slider","hc.dsv","debounce","panels","ngAnimate","ui.router","localytics.directives","chieffancypants.loadingBar","LocalStorageModule","ui.bootstrap","hc.downloader","angular-growl","pasvaz.bindonce","ng-context-menu","ngGrid","hc.marked","ngClipboard"]).constant("site",{name:"ligand-receptor-connectome",version:"0.1.0",apiVersion:"lr-1",debug:!1}).run(["$rootScope","site",function(a,b){a.site=b}]).run(["$window","site",function(a,b){b.debug&&(a.watchCount=function(){var a,b,c,d=0,e=document.all,f=e.length,g={};for(a=0;f>a;a++)b=angular.element(e[a]).data(),b&&b.hasOwnProperty("$scope")&&b.$scope.$$watchers&&(c=b.$scope,g[c.$id]||(g[c.$id]=!0,d+=c.$$watchers.length));return d})}]).config(["localStorageServiceProvider","site",function(a,b){a.setPrefix(b.apiVersion)}]).config(["$logProvider","site",function(a,b){a.debugEnabled(b.debug)}]).config(["growlProvider",function(a){a.globalTimeToLive(5e3)}])}(),function(){"use strict";angular.module("lrSpaApp").config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/hive"),a.state("home",{resolve:{loadedData:["ligandReceptorData",function(a){return a.load()}]},url:"/",controller:"MainCtrl",templateUrl:"components/ui/main.html"}).state("home.force-graph",{url:"^/force"}).state("home.hive-graph",{url:"^/hive"}).state("reset",{url:"^/reset",controller:"ResetCtrl"})}])}(),function(){"use strict";var a=_F("value"),b=_F("specificity"),c=_F("ticked"),d=_F("i");angular.module("lrSpaApp").controller("ResetCtrl",["$state","localStorageService",function(a,b){b.clearAll(),a.go("home.hive-graph")}]).controller("MainCtrl",["$scope","$rootScope","$log","$state","$filter","$templateCache","$timeout","$window","$location","growl","filterFilter","cfpLoadingBar","debounce","site","localStorageService","loadedData","ligandReceptorData","forceGraph","hiveGraph",function(e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w){function x(){t.pairs.forEach(function(a){a.locked=!1}),t.genes.forEach(function(a){a.locked=!1}),t.cells.forEach(function(a){a.locked=!1})}function y(a){return function(b){return b.locked?!1:(b.fixed=!1,b.ticked=a.indexOf(b.i)>-1,b.ticked)}}function z(){g.debug("load from local storage"),e.data.pairs.filter(y(e.selectedIds.pairs)),e.data.cells.filter(y(e.selectedIds.cells)),e.data.genes.filter(y(e.selectedIds.genes))}function A(){var a=B();e.undoStack[e.undoIndex]!==a&&(e.undoStack.push(a),e.undoIndex=e.undoStack.length-1)}function B(){var a={i:e.selectedIds,o:e.options,v:r.apiVersion},b=JSON.stringify(a);return Base64.encode(b)}function C(a){var b=Base64.decode(a),c=JSON.parse(b);c.v!==r.apiVersion&&g.warn("Possible version issue"),g.debug("load",c),e.selectedIds=c.i,e.options=c.o,z(),H()}f.$on("$routeChangeError",function(a){g.warn(a)}),e.data=t,e.max=Math.max;var D={showLabels:!0,maxEdges:100,ligandFilter:10,receptorFilter:10,ligandRankFilter:1,receptorRankFilter:1,edgeRankFilter:1},E={pairs:[569],cells:[13,15,16,17,33,62,69,72,73],genes:[145,768]};e.options=angular.copy(D),e.selectedIds=angular.copy(E),e.resetOptions=function(){e.options=angular.extend({},D),x()},e.resetVis=function(){e.options=angular.copy(D),e.selectedIds=angular.copy(E),z()},e.clearVis=function(){e.selectedIds={pairs:[],cells:[],genes:[]},z()};var F=_F("fixed");e.updateSelection=function(){G.data.selectedItems=G.data.nodes.filter(F)},e.rightClick=function(a){e.clickedItem=a.target.__data__&&a.target.__data__.type?a.target.__data__:null};var G;e.state=h.current,e.$watch("state.name",function(a){h.go(a),G&&G.clear(),G="home.hive-graph"===a?w:v,e.graph=G,e.graphData=G.data,H()}),e.saveJson=function(){var a=G.graph.getJSON(),b=new Blob([a],{type:"text/json"});saveAs(b,"lr-graph.json")},e.saveGml=function(){var a=G.graph.getGML(),b=new Blob([a],{type:"text/gml"});saveAs(b,"lr-graph.gml")},e.revoveSelectedItem=function(a){G.data.selectedItems[a].fixed=!1,G.data.selectedItems.splice(a,1),G.update()};var H=q(function(){g.debug("update network"),G&&(G.makeNetwork(e.data,e.options),G.draw(e.options),A())});if(e.showExpressionEdges=function(c,d){var f=angular.copy(c),h="specificity"===f.rank?b:a;""!==f.gene.class&&delete f.gene.id,f.gene=angular.extend({},f.gene,{locked:!1}),f.cell=angular.extend({},f.cell,{locked:!1}),f.ligandMin=e.options.ligandFilter,f.receptorMin=e.options.receptorFilter;var i,j=(new Date).getTime();if("each"===f.gene.class){var k=angular.copy(f);k.gene.class="ligand";var l=u.getExpressionValues(k,d,h);k.gene.class="receptor";var m=u.getExpressionValues(k,d,h);i=l.concat(m)}else i=u.getExpressionValues(f,d,h);g.debug("found",i.length,"expression edges"),i.length<1?n.addWarnMessage("No expression edges match search criteria and expression thresholds."):(i.forEach(function(a){a.gene.ticked=!0,a.cell.ticked=!0}),t.pairs.forEach(function(a){a.ticked=!a.locked&&a.ligand.ticked&&a.receptor.ticked}));var o=(new Date).getTime()-j;g.debug("Execution time:",o/1e3,"s")},e.showPaths=function(c,d){var f=angular.copy(c),h="specificity"===f.rank?b:a;f.pair=angular.extend({},f.pair,{locked:!1}),f.pair.ligand=angular.extend({},f.pair.ligand,{locked:!1}),f.pair.receptor=angular.extend({},f.pair.receptor,{locked:!1}),f.source=angular.extend({},f.source,{locked:!1}),f.target=angular.extend({},f.target,{locked:!1}),p.start();var i=Date.now();k(function(){f.ligandMin=e.options.ligandFilter,f.receptorMin=e.options.receptorFilter;var a;if("each"!==f.direction||angular.equals(f.target,f.source))a=u.getPathways(f,d,h);else{g.debug("Bi-directional search");var b=angular.copy(f);b.direction="AB";var c=u.getPathways(b,d,h);b=angular.copy(f),b.direction="BA",b.source=f.target,b.target=f.source;var j=u.getPathways(b,d,h);a=c.concat(j)}g.debug("found",a.length,"expression edges"),a.length<1?n.addWarnMessage("No pathways match search criteria and expression thresholds."):a.forEach(function(a){a.pair.ticked=!0,a.source.ticked=!0,a.ligand.ticked=!0,a.receptor.ticked=!0,a.target.ticked=!0});var k=Date.now()-i;g.debug("Execution time:",k/1e3,"s"),p.complete()})},e.hide=function(a){angular.isArray(a)||(a=[a]),a.forEach(function(a){("gene"===a.type||"sample"===a.type)&&(a.ticked=!1)})},e.pathFilter={source:{},target:{}},e.undoStack=[],e.undoIndex=-1,e.undo=function(){e.undoIndex--;var a=e.undoStack[e.undoIndex];C(a)},e.redo=function(){e.undoIndex++;var a=e.undoStack[e.undoIndex];C(a)},e.getSaveUrl=function(){return m.absUrl()+"?save="+B()},x(),m.search().save){var I=m.search().save;C(I),m.search("save",null)}else z(),H();["cells","pairs","genes"].forEach(function(a){var b=e.data[a],f=function(){return b.map(c)},g=function(){e.selectedIds[a]=b.filter(c).map(d),H()};e.$watch(f,g,!0)}),e.$watchCollection("options",H),e.ngGridPlugins=[new ngGridFlexibleHeightPlugin]}])}(),function(){"use strict";angular.module("lrSpaApp").filter("percentage",["$filter",function(a){return function(b,c){return a("number")(100*b,c)+"%"}}]).filter("min",function(){return function(a){var b;if(a)for(var c in a)(a[c]<b||void 0===b||null===b)&&(b=a[c]);return b}}).filter("max",function(){return function(a){var b;if(a)for(var c in a)(a[c]>b||void 0===b||null===b)&&(b=a[c]);return b}}).directive("graphItem",function(){return{scope:{item:"=graphItem",data:"=",graphData:"="},templateUrl:"components/ui/item.html"}}).directive("neighborsList",function(){return{scope:{list:"=neighborsList",array:"=",title:"&",key:"&"},templateUrl:"components/ui/neighbors-list-template.html",link:function(a,b,c){a.limit=3,a.key=c.key,a.hover=function(a,b){a.ticked&&(a.hover=b)},a.click=function(a){a.ticked=!a.ticked},a.expand=function(){a.limit=a.limit+10<a.list.length?a.limit+10:a.list.length}}}}).directive("expressionList",function(){return{scope:{list:"=expressionList",array:"=",key:"&"},templateUrl:"components/ui/gene-list-template.html",link:function(a,b,c){a.limit=3,c.key=c.key||"gene",a.key=c.key,a.get=function(b){var d=b[c.key];return"number"==typeof d&&c.array?a.array[d]:d},a.hover=function(a,b){a.ticked&&(a.hover=b)},a.click=function(a){a.ticked=!a.ticked},a.expand=function(){a.limit=a.limit+10<a.list.length?a.limit+10:a.list.length}}}})}(),function(){"use strict";angular.module("lrSpaApp").controller("PanelCtrl",["$scope","localStorageService",function(a,b){this.state={info:!1,data:!1},b.bind(a,"panelState",this.state),a.gridOptions={},a.itemClicked=function(a){a.entity.locked&&(a.entity.ticked=!1),a.selected===!0&&a.selectionProvider.selectedItems.forEach(function(b){b.ticked=a.entity.ticked,b.locked=a.entity.locked})};var c={showFooter:!0,enableSorting:!0,multiSelect:!0,showFilter:!0,showColumnMenu:!1,showGroupPanel:!1,enableCellSelection:!1,selectWithCheckboxOnly:!1,showSelectionCheckbox:!0,enableColumnResize:!0,sortInfo:{fields:["2*locked + !ticked"],directions:["asc"]},checkboxHeaderTemplate:"checkboxHeaderTemplate.html",beforeSelectionChange:function(a,b){return angular.isArray(a)||b.ctrlKey||b.shiftKey||a.selectionProvider.toggleSelectAll(!1,!0),!0},columnDefs:[{field:"2*locked + !ticked",displayName:"Visible",width:60,cellTemplate:"cellTemplate",headerCellTemplate:"visibleHeaderCellTemplate"}]};a.gridOptions={},a.gridOptions.cells=angular.extend({},c,{data:"data.cells",columnDefs:[c.columnDefs[0],{field:"name",displayName:"Cell Type"},{field:"meta.Ontology",displayName:"Ontology"}]}),a.gridOptions.genes=angular.extend({},c,{data:"data.genes",columnDefs:[c.columnDefs[0],{field:"name",displayName:"Gene Symbol"},{field:"description",width:"25%",displayName:"Gene Name"},{field:"class",displayName:"Class"},{field:"hgncid",displayName:"HGNC ID",cellTemplate:"cellHGNCTemplate"},{field:"uniprotid",displayName:"UniProt ID",cellTemplate:"cellUniProtTemplate"},{field:"taxon",displayName:"Taxon"}]}),a.gridOptions.pairs=angular.extend({},c,{data:"data.pairs",columnDefs:[c.columnDefs[0],{field:"name",displayName:"Pair Name"},{field:"Ligand",displayName:"Ligand",cellTemplate:"cellLigandTemplate"},{field:"Receptor",displayName:"Receptor",cellTemplate:"cellReceptorTemplate"},{field:"Source",cellTemplate:"cellSourceTemplate"},{field:"Evidence",cellTemplate:"cellPubMedTemplate"}]})}])}(),function(){"use strict";var a="components/ui/",b=angular.module("panels",[]);b.directive("panel",["$timeout",function(b){return{scope:{heading:"@",label:"@",isOpen:"=?"},restrict:"EA",transclude:!0,templateUrl:a+"panel.html",link:function(a){a.ngIf=a.isOpen,a.toggleOpen=function(){a.isOpen?(a.isOpen=!1,b(function(){a.ngIf=!1})):(a.ngIf=!0,b(function(){a.isOpen=!0}))}}}}])}(),function(){"use strict";var a=_F("value"),b=_F(0);angular.module("lrSpaApp").constant("files",{expression:"data/LR.expr.txt",pairs:"data/LR.pairs.txt",genes:"data/LR.genes.txt",ontology:"data/ontology.txt"}).service("ligandReceptorData",["$q","$log","$http","$timeout","dsv","files",function(c,d,e,f,g,h){function i(a,b){if(""===b)return!0;var c;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(angular.equals(a,b))return!0;for(c in b)if(!hasOwnProperty.call(a,c)||!i(a[c],b[c]))return!1;return!0}if(angular.isArray(b)){if(0===b.length)return!0;for(c in b)if(i(a,b[c]))return!0;return!1}return"boolean"==typeof b?a===b:""+a==""+b}var j={},k=!1;return j.data={expr:[],pairs:[],cells:[],genes:[],ontology:[]},j.load=function(){function a(a){return g.tsv.get(a,{cache:k},function(a,b){return{i:b,id:a.Ligand+"_"+a.Receptor,name:a.Ligand+"-"+a.Receptor,Ligand:a.Ligand,Receptor:a.Receptor,ligandId:a.Ligand+".ligand",receptorId:a.Receptor+".receptor",Source:a.Source,Evidence:a.Evidence,PMIDs:a.PMIDs,Databases:a.Databases.split(",").join(", ")}}).error(function(a,b,c,e){d.warn("Error",a,b,c,e)}).success(function(a){d.debug("Pairs loaded:",a.length)}).then(function(a){return a.data})}function e(a){return g.tsv.getRows(a,{cache:k},function(a,b){return 0===b?a:a.map(function(a,b){return 0===b?a:+a})}).error(function(a,b,c,e){d.warn("Error",a,b,c,e)}).success(function(a){d.debug("Expression rows:",a.length)}).then(function(a){return a.data})}function f(a){return g.tsv.get(a,{cache:k},function(a){return{name:a.ApprovedSymbol,description:a.ApprovedName,"class":a.Class.toLowerCase(),id:a.ApprovedSymbol+"."+a.Class.toLowerCase(),age:a.Age,taxon:a.Taxon,consensus:a.Consensus_Call,type:"gene",hgncid:a.HGNCID,uniprotid:a.UniProtID}}).error(function(a,b,c,e){d.warn("Error",a,b,c,e)}).success(function(a){d.debug("Genes loaded:",a.length)}).then(function(a){return a.data})}function i(a){return g.tsv.get(a,{cache:k}).error(function(a,b,c,e){d.warn("Error",a,b,c,e)}).then(function(a){var b={};return a.data.forEach(function(a){b[a.Cell]=a.Ontology}),b})}return c.all([a(h.pairs),e(h.expression),i(h.ontology),f(h.genes)]).then(function(a){j.data.pairs=a[0];var c=j.data.expr=a[1],e=a[2];j.data.genes=a[3],j.data.cells=c[0].slice(1).map(function(a,b){var c={name:a,id:String(b),i:b,type:"sample"},d=e[a];return d&&(c.meta=c.meta||{},c.meta.Ontology=d),c}),d.debug("Samples loaded:",j.data.cells.length),d.debug("Done loading");var f=c.slice(1).map(b);return j.data.genes=j.data.genes.map(function(a){var b=f.indexOf(a.name);return a.i=b,a.median=b>-1?d3.median(c[a.i+1].slice(1)):0,a}),j.data.pairs=j.data.pairs.filter(function(a){var b,c;return j.data.genes.forEach(function(d){d.id===a.ligandId?b=d:d.id===a.receptorId&&(c=d)}),b&&c?(a.index=[b.i,c.i],a.ligand=b,a.receptor=c,"ligand"!==b.class?(d.warn("Class inconsistancy",b.name),!1):"receptor"!==c.class?(d.warn("Class inconsistancy",c.name),!1):!0):(d.warn("Ligand or receptor missing from expression table",a.ligandId,a.receptorId),a.index=[-1,-1],!1)}),j.data})},j.getGenes=function(a){return a?j.data.genes.filter(function(b){return i(b,a)}):j.data.genes},j.getCells=function(a){return a?j.data.cells.filter(function(b){return i(b,a)}):j.data.cells},j.getExpressionValues=function(b,c,d){b=b||{},d=d||a;var e=b.ligandMin||0,f=b.receptorMin||0,g=[],h=j.getCells(b.cell),i=j.getGenes(b.gene),k=0;return i.forEach(function(a){if(!(a.i<0)){var b=Math.max("ligand"===a.class?e:f,0);h.forEach(function(e){if(!(e.i<0)){var f=+j.data.expr[a.i+1][e.i+1];f>b&&(k++,g.push({gene:a,cell:e,value:f,specificity:(f+1)/(a.median+1)}),g.length>c&&(g=g.sort(function(a,b){return d(b)-d(a)}).slice(0,c)))}})}}),g},j.getPairs=function(a){return a?j.data.pairs.filter(function(b){return i(b,a)}):j.data.pairs},j.getPathways=function(b,c,e){c=c||10,e=e||a;var f=[];d.debug("Calculating pathways");var g=void 0!==b.ligandMin?b.ligandMin:10,h=void 0!==b.receptorMin?b.receptorMin:10,k=0,l=j.getPairs(b.pair);if(l.length<1)return[];var m=j.getCells(b.source);if(m.length<1)return[];var n=j.getCells(b.target);return n.length<1?[]:(l.forEach(function(a){a.ligand.i<0||a.receptor.i<0||(!b.ligand||i(a.ligand,b.ligand))&&(!b.receptor||i(a.receptor,b.receptor))&&m.forEach(function(b){var d=+j.data.expr[a.ligand.i+1][b.i+1],i=(d+1)/(a.ligand.median+1);g>=d||n.forEach(function(g){var l=+j.data.expr[a.receptor.i+1][g.i+1],m=(l+1)/(a.receptor.median+1);h>=l||(f.push({pair:a,source:b,ligand:a.ligand,receptor:a.receptor,target:g,ligandExpression:d,receptorExpression:l,value:d*l,specificity:i*m}),f.length>c&&(f=f.sort(function(a,b){return e(b)-e(a)}).slice(0,c)),k++)})})}),d.debug("found",f.length,"paths out of",k),f)},j}])}(),function(){"use strict";angular.module("lrSpaApp").service("Graph",["$log","site",function(a,b){var c={};return function(d){function e(){var a={};return a.nodes=f.data._nodes.map(function(a,b){var c={data:{id:b,name:a.name,type:a.type,"class":a.class,value:String(a.value)},position:{x:a.x,y:a.y}};return angular.extend(c.data,a.meta),c}),a.edges=f.data._edges.map(function(a,b){return{data:{id:b,name:a.name,interaction:a.type,source:f.data._nodes.indexOf(a.source),target:f.data._nodes.indexOf(a.target),value:String(a.value)}}}),a}d=d||c;var f={},g={nodes:[],edges:[],nodesIndex:{},edgesIndex:{},inEdgesIndex:{},outEdgesIndex:{},_nodes:[],_edges:[],_inEdgesIndex:{},_outEdgesIndex:{},edgeCount:0,ligandExtent:[0,1e5],receptorExtent:[0,1e5],selectedItems:[]};return f.clear=function(){f.data=g},f.clear(),f.Node=function(a,b,c){a&&(this.id=a),b&&(this.name=b),c&&(this.type=c),this.values=[0,0],this.value=0,this.lout=[],this.lin=[],this._expr=[],this._ligands=[],this._receptors=[]},f.addNode=function(b){("object"!=typeof b||1!==arguments.length)&&a.error("addNode: Wrong arguments.");var c=b.id;f.data.nodes.push(b),f.data.nodesIndex[c]=b,f.data.edgesIndex[c]={},f.data.inEdgesIndex[c]=[],f.data.outEdgesIndex[c]=[],f.data._inEdgesIndex[c]=[],f.data._outEdgesIndex[c]=[]},f.Edge=function(a,b,c){return c=c||a.name+"->"+b.name,{source:a,target:b,value:0,name:c,values:[0,0]}},f.addEdge=function(b){(1!==arguments.length||"object"!=typeof b)&&a.error("addNode: Wrong arguments."),b.ticked=b.source.ticked&&b.target.ticked,b.ticked&&f.data.edges.push(b);var c=b.source.id,d=b.target.id;b.source.ticked&&(f.data.edgesIndex[c]=f.data.edgesIndex[c]||{},f.data.edgesIndex[c][d]=b,f.data.outEdgesIndex[c]=f.data.outEdgesIndex[c]||[],f.data.outEdgesIndex[c].push(b),b.ticked&&f.data._outEdgesIndex[c].push(b)),b.target.ticked&&(f.data.inEdgesIndex[d]=f.data.inEdgesIndex[d]||[],f.data.inEdgesIndex[d].push(b),b.ticked&&f.data._inEdgesIndex[d].push(b))},f.getJSON=function(){var a={format_version:"1.0",generated_by:[b.name,b.version].join("-"),target_cytoscapejs_version:"~2.1",data:{},elements:e()};return a.elements.nodes.forEach(function(a){a.data.id=String(a.data.id)}),a.elements.edges.forEach(function(a){a.data.id=String(a.data.id),a.data.source=String(a.data.source),a.data.target=String(a.data.target)}),JSON.stringify(a)},f.getGML=function(){function a(a){return'"'+a+'"'}function b(a,b){a=a||2,b=b||" ";var d=c(b,a);return function(a){return d+a}}function c(a,b){for(var c="";b>0;)c+=a,b--;return c}function d(b,c){if(_.isString(b))return[c,a(b)].join(" ");if(_.isArray(b))return[c,a(String(b))].join(" ");if(_.isObject(b)){var e=_.map(b,d);return e.unshift(c,"["),e.push("]"),e.join(" ")}return[c,String(b)].join(" ")}var f=e(),g=[];return g.push("graph ["),f.nodes.forEach(function(a){g.push("  node [");var c=_.map(a.data,d).map(b(4));g=g.concat(c),g.push("    graphics ["),g.push(b(6)(d(a.position,"center"))),g.push("    ]"),g.push("  ]")}),f.edges.forEach(function(a){g.push("  edge [");var c=_.map(a.data,d).map(b(4));g=g.concat(c),g.push("  ]")}),g.push("]"),g.join("\n")},f}}])}(),function(){"use strict";angular.module("lrSpaApp").service("forceGraph",["$log","$window","$rootScope","$timeout","Graph","debounce","growl","cfpLoadingBar",function(a,b,c,d,e,f,g,h){function i(a,b){r.data.nodes=[],r.data.nodesIndex={},b.forEach(function(a){var b=angular.extend(a,new r.Node);b.type="sample",r.addNode(b)}),a.forEach(function(a){var b=angular.extend(a,new r.Node);b.type="gene",r.addNode(b)})}function j(){r.data.nodeCount=r.data.nodes.length;var a=r.data._nodes.sort(v).filter(w),b=a.map(x).sort(d3.ascending),c=a.map(y).sort(d3.ascending);r.data.ligandExtent=d3.extent(b),r.data.receptorExtent=d3.extent(c),r.data._nodes=a}function k(a,b,c,d,e){try{return l(a,b,c,d,e)}catch(f){if(f!==z)throw f;return g.addErrorMessage(z.message),[]}}function l(a,b,c,d,e){r.data.edges=[],a.forEach(function(a){a.ticked&&b.forEach(function(b){if(b.ticked){var c=b.i>-1&&a.i>-1?+d[b.i+1][a.i+1]:0,f="receptor"===b.class?e.receptorFilter:e.ligandFilter;if(f=Math.max(f,0),c>f){var g,h;"receptor"===b.class?(g=b,h=a):(g=a,h=b);var i=(c+1)/(b.median+1),j=new r.Edge(r.data.nodesIndex[g.id],r.data.nodesIndex[h.id]);j.gene=b,j.cell=a,j.value=c,j.id=""+g.id+h.id,j.type="expression",j.class=b.class,j._specificity=i,j.specificity=Math.log(i)/Math.log(10),r.addEdge(j)}}})}),c.forEach(function(a){if(a.ticked){var b=r.data.inEdgesIndex[a.ligandId],c=r.data.outEdgesIndex[a.receptorId];b.forEach(function(b){c.forEach(function(c){var d=b.value*c.value;if(d>0&&b.value>e.receptorFilter&&c.value>e.ligandFilter){var f=b.source,g=c.target,h=r.data.edgesIndex[f.id][g.id]||new r.Edge(f,g),i=b._specificity*c._specificity,j=Math.log(i)/Math.log(10);h._specificity||(h._specificity=h.specificity=0),h.type="sample-sample",h.id=h.name=f.name+" -> "+g.name,h.id=""+f.id+g.id,h.value+=d,h._specificity+=i,h.specificity+=j,h.pairs=h.pairs||[],h.pairs.push({pair:a,value:d,specificity:j}),r.addEdge(h)}})})}});var f=_F("type"),g=f.eq("expression"),h=function(a,b){return b.value-a.value};r.data.nodes.forEach(function(a){a.ticked&&(r.data.outEdgesIndex[a.id]=r.data.outEdgesIndex[a.id].sort(h),r.data.inEdgesIndex[a.id]=r.data.inEdgesIndex[a.id].sort(h),r.data._outEdgesIndex[a.id]=r.data._outEdgesIndex[a.id].sort(h),r.data._inEdgesIndex[a.id]=r.data._inEdgesIndex[a.id].sort(h),a.values[0]=d3.sum(r.data._outEdgesIndex[a.id].filter(g),t),a.values[1]=d3.sum(r.data._inEdgesIndex[a.id].filter(g),t),a.value=d3.sum(a.values))})}function m(b){return a.debug("Drawing graph"),r.data.nodes.length<1?void o():void d3.select("#vis svg").classed("labels",b.showLabels).datum(r.data).call(q)}function n(){q.update&&(a.debug("Updating graph"),q.update())}function o(){a.debug("Clearing"),r.data.nodes=[],r.data.edges=[],r.data.nodesIndex={},r.data.edgesIndex={},d3.selectAll("#vis svg g").remove()}function p(b,c){if(b){var d=b.pairs.filter(function(a){return a.ticked}),e=b.cells.filter(function(a){return a.ticked}),f=b.expr,l=b.genes.filter(function(a){return a.ticked});if(a.debug("Constructing"),e.length<1&&l.length<1)return o(),void g.addWarnMessage("No cells or genes selected");h.start(),i(b.genes,b.cells),k(b.cells,b.genes,d,f,c),r.data.edges=r.data.edges.filter(_F("type").eq("sample-sample")),a.debug("Total nodes: ",r.data.nodes.length),a.debug("Total Edges: ",r.data.edges.length),r.data.edgeCount=r.data.edges.length,h.inc(),r.data._nodes=r.data.nodes.filter(u).filter(_F("type").eq("sample")),j(c),r.data.edges.forEach(function(a){a.ticked=!1}),r.data._nodes.forEach(function(a){r.data.outEdgesIndex[a.id].forEach(function(a){a.ticked=!0})}),r.data._edges=r.data.edges.filter(u),r.data._edges.length>c.edgeRankFilter*r.data._edges.length&&(r.data._edges=r.data._edges.sort(v).slice(0,c.edgeRankFilter*r.data.edges.length),r.data._nodes.forEach(function(a){a.inDegree=a.outDegree=0}),r.data._edges.forEach(function(a){a.target.inDegree++,a.source.outDegree++}),r.data._nodes=r.data._nodes.filter(function(a){return a.inDegree>0||a.outDegree>0})),a.debug("Filtered nodes: ",r.data._nodes.length),a.debug("Filtered edges: ",r.data._edges.length),h.inc(),r.data._nodes.forEach(function(a){"gene"===a.type?a.group="gene."+a.class:(a.group="sample",a.values[0]>0&&(a.class="ligand"),a.values[1]>0&&(a.class="receptor"),a.values[0]>0&&a.values[1]>0&&(a.class="both"))}),h.complete()}}var q=new lrd3.charts.forceGraph,r=new e,s=_F("fixed");q.on("hover",f(function(a){r.data.hoverEvent=!0,r.data.selectedItems=r.data.selectedItems.filter(s),a&&r.data.selectedItems.indexOf(a)<0&&r.data.selectedItems.unshift(a)})),q.on("selectionChanged",f(function(){var a=r.data.nodes.filter(s),b=r.data.edges.filter(s);r.data.selectedItems=a.concat(b)}));var t=_F("value"),u=_F("ticked"),v=function(a,b){return t(b)-t(a)},w=function(a){return"node"!==a.type||a.value>=0},x=function(a){return a.values[0]},y=function(a){return a.values[1]},z=new Error("Maximum number of edges exceeded");return{graph:r,data:r.data,chart:q,update:f(n,30),makeNetwork:p,draw:m,clear:o}}])}(),function(){"use strict";angular.module("lrSpaApp").service("hiveGraph",["$log","$window","$rootScope","$timeout","Graph","debounce","growl","cfpLoadingBar",function(a,b,c,d,e,f,g,h){function i(a,b){s.data.nodes=[],s.data.nodesIndex={},b.forEach(function(a){var b=angular.extend(a,new s.Node);b.type="sample",s.addNode(b)}),a.forEach(function(a){var b=angular.extend(a,new s.Node);b.type="gene",s.addNode(b)})}function j(){s.data.nodeCount=s.data.nodes.length;var a=s.data._nodes.sort(y).filter(z);s.data._nodes=a.slice(0)}function k(a,b,c,d,e){try{return l(a,b,c,d,e)}catch(f){if(f!==B)throw f;return g.addErrorMessage(B.message),[]}}function l(b,c,d,e,f){s.data.edges=[],b.forEach(function(a){a.ticked&&c.forEach(function(b){if(b.ticked){var c=b.i>-1&&a.i>-1?+e[b.i+1][a.i+1]:0,d="receptor"===b.class?f.receptorFilter:f.ligandFilter;if(d=Math.max(d,0),c>d){var g=a,h=b;"receptor"===b.class?(g=s.data.nodesIndex[b.id],h=s.data.nodesIndex[a.id]):(g=s.data.nodesIndex[a.id],h=s.data.nodesIndex[b.id]);var i=new s.Edge(g,h);i.gene=b,i.cell=a,i.value=c,i.specificity=Math.log(c+1)/Math.log(10)-Math.log(b.median+1)/Math.log(10),i.id=g.id+h.id,i.type="expression",i.class=b.class,s.addEdge(i)}}})}),d.forEach(function(b){if(b.ticked){var c=s.data.nodesIndex[b.ligandId],d=s.data.nodesIndex[b.receptorId];if(c&&d){var e=new s.Edge(c,d);e.type="pair",e.value=1,s.addEdge(e)}if(s.data.edges.length>A)throw a.warn("Maximum number of edges exceeded",s.data.edges.length),B}});var g=x.eq("expression");s.data.nodes.forEach(function(a){a.ticked&&(s.data.outEdgesIndex[a.id]=s.data.outEdgesIndex[a.id].sort(y),s.data.inEdgesIndex[a.id]=s.data.inEdgesIndex[a.id].sort(y),s.data._outEdgesIndex[a.id]=s.data.outEdgesIndex[a.id].filter(v),s.data._inEdgesIndex[a.id]=s.data.inEdgesIndex[a.id].filter(v),a.values[0]=d3.sum(s.data._outEdgesIndex[a.id].filter(g),u),a.values[1]=d3.sum(s.data._inEdgesIndex[a.id].filter(g),u),a.value=d3.sum(a.values))})}function m(b){return a.debug("Drawing graph"),s.data.nodes.length<1?void o():void d3.select("#vis svg").classed("labels",b.showLabels).datum(s.data).call(t)}function n(){t.update&&(a.debug("Updating graph"),t.update())}function o(){a.debug("Clearing"),s.data.nodes=[],s.data.edges=[],s.data.nodesIndex={},s.data.edgesIndex={},d3.selectAll("#vis svg g").remove()}function p(b,c){if(b){q=b,r=c;var d=b.pairs.filter(function(a){return a.ticked}),e=b.cells.filter(function(a){return a.ticked}),f=b.expr,l=b.genes.filter(function(a){return a.ticked});if(a.debug("Constructing"),e.length<1&&l.length<1)return o(),void g.addWarnMessage("No cells or genes selected");if(h.start(),i(b.genes,b.cells),k(b.cells,b.genes,d,f,r),a.debug("Total nodes: ",s.data.nodes.length),a.debug("Total Edges: ",s.data.edges.length),s.data.edgeCount=s.data.edges.length,h.inc(),s.data._nodes=s.data.nodes.filter(v),j(r),s.data.edges.forEach(function(a){a.ticked=!1}),s.data._nodes.forEach(function(a){s.data.outEdgesIndex[a.id].forEach(function(a){a.ticked=!0})}),s.data._edges=s.data.edges.filter(v),s.data._edges.length>r.edgeRankFilter*s.data._edges.length){var m=s.data._edges.filter(x.eq("pair"));s.data._edges=s.data._edges.filter(x.eq("expression")).sort(y).slice(0,r.edgeRankFilter*s.data.edges.length).concat(m)}a.debug("Filtered nodes: ",s.data._nodes.length),a.debug("Filtered edges: ",s.data._edges.length),h.inc(),s.data._nodes.forEach(function(a){"gene"===a.type?a.group="gene."+a.class:(a.group="sample",a.values[0]>0&&(a.class="ligand"),a.values[1]>0&&(a.class="receptor"),a.values[0]>0&&a.values[1]>0&&(a.class="both"))}),h.complete()}}var q=null,r=r,s=new e,t=new lrd3.charts.hiveGraph,u=_F("value"),v=_F("ticked"),w=_F("fixed"),x=_F("type"),y=u.order(d3.descending),z=x.neq("sample").or(u.gte(0));t.on("hover",f(function(a){s.data.hoverEvent=!0,s.data.selectedItems=s.data.selectedItems.filter(w),a&&s.data.selectedItems.indexOf(a)<0&&s.data.selectedItems.unshift(a)})),t.on("selectionChanged",function(){c.$apply(function(){s.data.selectedItems=s.data.nodes.filter(w)})});var A=1e3,B=new Error("Maximum number of edges exceeded");return{graph:s,data:s.data,chart:t,update:f(n,30),makeNetwork:p,draw:m,clear:o}}])}();